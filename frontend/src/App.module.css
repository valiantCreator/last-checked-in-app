/* DEV COMMENT: Layout styles used by the MainApplication component in App.jsx. */

.contentWrapper {
  max-width: 700px;
  margin: 0 auto;
}

.viewControls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 1rem 0;
}

.viewControls h2 {
  font-size: 1.25rem;
  margin: 0;
}

.viewToggleButtons {
  display: flex;
}

/* Gemini DEV COMMENT: Replaced the old generic 'button' selector with a specific modular class for the view buttons to prevent conflicts with global styles. This class will be applied in App.jsx. */
.viewToggleButton {
  background: none;
  border: 1px solid var(--border-color);
  color: var(--text-color);
  padding: 0.25rem 0.6rem;
  font-size: 0.8rem;
  cursor: pointer;
  line-height: 1.2;
}

.viewToggleButton:first-of-type {
  border-radius: 8px 0 0 8px;
  border-right: none;
}

.viewToggleButton:not(:first-of-type):not(:last-of-type) {
  border-radius: 0;
  border-right: none;
}

.viewToggleButton:last-of-type {
  border-radius: 0 8px 8px 0;
}

.active {
  background-color: var(--primary-color);
  color: var(--primary-text);
  border-color: var(--primary-color);
}

.pinnedSection h2 {
  margin-top: 1rem;
  margin-bottom: 0.5rem;
  color: var(--pin-color);
  font-size: 1.1rem;
  font-weight: bold;
}

/* --- Adaptive Grid & List View Container Styles --- */

/* For LIST VIEW, keep the container narrow and centered. */
.contactsContainer.list {
  max-width: 700px;
  margin: 0 auto;
}

/* For GRID VIEW, default to a 2-column layout (mobile-first). */
.contactsContainer.grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
  margin-top: 1rem;
}

/* On medium screens (tablets), switch to 3 columns. */
@media (min-width: 768px) {
  .contactsContainer.grid {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

/* On large screens (desktops), switch to 4 columns. */
@media (min-width: 1024px) {
  .contactsContainer.grid {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

/* Removes default margin from .card elements ONLY when they are in a grid. */
.contactsContainer.grid > :global(.card) {
  margin: 0;
}
